# Project's path (absolute or relative)
PROJECT_PATH=./project

# Project's domain
PROJECT_DOMAIN=symfony.local

# Nginx document_root
DOCUMENT_ROOT=public

SYMFONY_LOG_PATH=./var/logs/symfony
NGINX_LOG_PATH=./var/logs/nginx/
MYSQL_DATA_PATH=./var/lib/mysql
MYSQL_DUMP_PATH=./db

# Linux users: Set this to user id from the host system to avoid permission problems.
# Get the user id with: "id -u"
USER_ID=
GROUP_ID=

# Security
SSH_KEY_PATH=~/.ssh

# User main directory where user configuration is stored like /root
USER_CONFIG_PATH=./user

# Debian OS available versions: wheezy, jessie, stretch
DEBIAN_VERSION=stretch

# PHP available versions: 5.6, 7.0, 7.1, 7.2, 7.3
PHP_VERSION=7.2

NGINX_VERSION=1.15.7-1~stretch

# Composer
COMPOSER_PATH=./.composer

# MySQL
MYSQL_ROOT_PASSWORD=root
MYSQL_DATABASE=db_name
MYSQL_USER=db_user
MYSQL_PASSWORD=db_password

# MySQL available versions: 5.5, 5.6, 5.7, 8.0
MYSQL_VERSION=5.6

# Default MySQL character set and collation
MYSQL_CHARACTER_SET_SERVER=utf8
MYSQL_COLLATION_SERVER=utf8_unicode_ci

DEFAULT_TIMEZONE=Europe/Vilnius

# PHP settings
PHP_MEMORY_LIMIT=2048M

# phpMyAdmin configuration
PMA_CLIENT_MAX_BODY_SIZE=1024M
PMA_MEMORY_LIMIT=1024M
PMA_POST_MAX_SIZE=1024M
PMA_UPLOAD_MAX_FILESIZE=1024M

# Open ports
PORT_MYSQL=3306
PORT_NGINX=80
PORT_NGINX_SSL=443
PORT_PHPMYADMIN=8080

# Blackfire
BLACKFIRE_SERVER_ID=
BLACKFIRE_SERVER_TOKEN=
BLACKFIRE_CLIENT_ID=
BLACKFIRE_CLIENT_TOKEN=

# Xdebug
XDEBUG_CONFIG=1
XDEBUG_REMOTE_ENABLE=1
XDEBUG_REMOTE_AUTOSTART=1
XDEBUG_REMOTE_PORT=9000

# Linux users, uncomment:
# XDEBUG_REMOTE_CONNECT_BACK=1
# If you want to XDEBUG from CLI, don't use XDEBUG_REMOTE_CONNECT_BACK:
# Enter the IP adress of your Docker bridge, to get this address:
# $ ip -f inet addr show docker0 | grep -Po 'inet \K[\d.]+'
# XDEBUG_REMOTE_HOST=

# macOS uncomment (Docker for Mac CE version >= 17.06.0):
# XDEBUG_REMOTE_HOST=docker.for.mac.localhost
# macOS uncomment (Docker for Mac CE version >= 17.12.0):
# XDEBUG_REMOTE_HOST=docker.for.mac.host.internal

# Windows uncomment (Docker for Windows CE >= 17.06.0):
# XDEBUG_REMOTE_HOST=docker.for.win.localhost

# If you're running an older version of Docker you can use this:
# Support for this is deprecated!
# For Docker for macOS or Windows, you need to provide your IP address.
# For macOS, you can create an alias of your loopback (127.0.0.1) address
# with the following command:
#
# sudo ifconfig lo0 alias 10.254.254.254 255.255.255.0
#
# If you are running Linux and sharing your .env with mixed-OS team members,
# you can also create a URL alias using the following:
#
# sudo ip -4 addr add 10.254.254.254/32 dev lo
# XDEBUG_REMOTE_HOST=10.254.254.254

# Pipe XDebug logs to STDOUT? You only need to do this if Xdebug isn't working.
# XDEBUG_CONFIG=remote_log=/dev/stdout

# Xdebug IDE configuration.
PHP_IDE_CONFIG=serverName=symfony-docker

# Node JS available versions: 4.x, 5.x, 6.x, 7.x, 8.x, 9.x, 10.x, 11.x
NODE_JS_VERSION=9.x